on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - closed   # Including closed to remove preview when PR is closed. 
    branches:
      - main

jobs:
  build:
    if: github.event.action != 'closed'  # If closing the PR, no publishing
    runs-on: ubuntu-latest
    # To cancel previous actions that could run on this PR
    concurrency:
      group: preview-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - name: Check out repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0  # To enable full access to Git repo
          ref: ${{ github.event.pull_request.head.ref }}  # Reference of the commit to checkout to. To ensure it's the one of the PR
          repository: ${{github.event.pull_request.head.repo.full_name}}  # Reference to the branch to checkout to. Useful with PR from forks
    
      # Quarto
      - name: Set up Quarto
        uses: quarto-dev/quarto-actions/setup@v2
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Render Quarto  
      - name: Render Quarto Project
        uses: quarto-dev/quarto-actions/render@v2
        with:
          to: html
        # env: # For Quarto profiles
        #   QUARTO_PROFILE: preview

      - name: Deploy preview
        id: deploy-preview
        uses: rossjrw/pr-preview-action@v1.6.2
        with:
          source-dir: ./_site/
          preview-branch: gh-pages

      - name: Fetch comments  # To see if a comment has previously been posted
        id: fetch-comments
        uses: actions/github-script@v6
        with:
          script: |
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });

            // Find the comment with the body containing "âœ… Preview site is ready:"
            const previewSiteReadyComment = comments.find(comment => comment.body.includes('ðŸš€ View preview at'));

            // Set the output
            if (previewSiteReadyComment) {
              core.setOutput('commentId', previewSiteReadyComment.id);
            } else {
              core.setOutput('commentId', '');
            }

      - name: Delete existing comment if exists
        if: steps.fetch-comments.outputs.commentId != ''
        uses: actions/github-script@v6
        with:
          script: |
            await github.rest.issues.deleteComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: ${{ steps.fetch-comments.outputs.commentId }},
            });

      - name: Comment PR
        run: echo "Preview visible at ${{ steps.deploy-preview.outputs.preview-url }}"